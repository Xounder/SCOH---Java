/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package visualizar;

import java.awt.Color;
import java.awt.event.KeyEvent;
import javax.swing.JOptionPane;
import modelos.Digitadores;
import modelos.banco.DigitadoresBanco;

/**
 *
 * @author renan
 */
public class TelaAtualizarAdmin extends javax.swing.JFrame {

    private int userId;
    private int contadorLog = 0;
    private int contadorSenha = 0;
    private int contadorPin = 0;

    private boolean alterarSenha;
    private boolean newDigit;

    /**
     * Creates new form TelaAtualizarAdmin
     */
    public TelaAtualizarAdmin() {
        initComponents();
        jContadorLogin.setVisible(false);
        jContadorSenha.setVisible(false);
        jContadorPin.setVisible(false);
    }

    public TelaAtualizarAdmin(int id) {
        initComponents();
        this.userId = id;
        this.alterarSenha = false;
        this.newDigit = false;

        jContadorLogin.setVisible(false);
        jContadorSenha.setVisible(false);
        jContadorPin.setVisible(false);
    }

    public TelaAtualizarAdmin(int id, boolean alterar) {
        initComponents();
        this.userId = id;
        this.alterarSenha = alterar;    //Admin/Digitador
        this.newDigit = !alterar;  //Digitador

        jContadorLogin.setVisible(false);
        jContadorSenha.setVisible(false);
        jContadorPin.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jSalvar = new javax.swing.JButton();
        jAdminSenha = new javax.swing.JTextField();
        jAdminLogin = new javax.swing.JTextField();
        jContadorLogin = new javax.swing.JLabel();
        jContadorSenha = new javax.swing.JLabel();
        jContadorPin = new javax.swing.JLabel();
        jAdminPin = new javax.swing.JPasswordField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Atualizar Administrador");
        setIconImage(new javax.swing.ImageIcon(getClass().getResource("/imagens/senha.png")).getImage());
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Dados"));

        jLabel3.setText("PIN*");

        jLabel1.setText("Login");

        jLabel2.setText("Senha*");

        jSalvar.setText("Salvar");
        jSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jSalvarActionPerformed(evt);
            }
        });

        jAdminSenha.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jAdminSenhaKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jAdminSenhaKeyReleased(evt);
            }
        });

        jAdminLogin.addContainerListener(new java.awt.event.ContainerAdapter() {
            public void componentAdded(java.awt.event.ContainerEvent evt) {
                jAdminLoginComponentAdded(evt);
            }
        });
        jAdminLogin.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                jAdminLoginMouseDragged(evt);
            }
        });
        jAdminLogin.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jAdminLoginKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jAdminLoginKeyReleased(evt);
            }
        });

        jContadorLogin.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jContadorLogin.setText("(0)");

        jContadorSenha.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jContadorSenha.setText("(0)");

        jContadorPin.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jContadorPin.setText("(0)");

        jAdminPin.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jAdminPinKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jAdminPinKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(52, 52, 52)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel3)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jAdminSenha, javax.swing.GroupLayout.DEFAULT_SIZE, 110, Short.MAX_VALUE)
                    .addComponent(jAdminLogin, javax.swing.GroupLayout.DEFAULT_SIZE, 110, Short.MAX_VALUE)
                    .addComponent(jAdminPin))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jContadorLogin)
                            .addComponent(jContadorSenha)
                            .addComponent(jContadorPin))
                        .addGap(87, 87, 87))
                    .addComponent(jSalvar, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap(11, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jAdminLogin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jContadorLogin))
                .addGap(12, 12, 12)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jAdminSenha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jContadorSenha))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jContadorPin)
                    .addComponent(jAdminPin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSalvar)
                .addContainerGap(26, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
/**
     * Verifica se as caixas estão com os parâmetros da forma certa
     *
     * @param nome1
     * @param nome2
     * @return
     */
    private boolean verificaCaixa(String nome1, String nome2) {
        boolean certo = false;
        if ((jAdminLogin.getText().length() > 0 && jAdminLogin.getText().length() < 5) || jAdminSenha.getText().length() < 5) {
            JOptionPane.showMessageDialog(this, "Os campos " + nome1 + " e " + nome2 + " devem conter pelo menos 5 caracteres.",
                    "Aviso", JOptionPane.WARNING_MESSAGE);
        } else if (jAdminLogin.getText().length() > 15 || jAdminSenha.getText().length() > 15) {
            JOptionPane.showMessageDialog(this, "Os campos " + nome1 + " ou " + nome2 + " ultrapassaram o limite de 15 caracteres.",
                    "Erro", JOptionPane.ERROR_MESSAGE);
        } else if (new String(jAdminPin.getPassword()).length() < 8 || new String(jAdminPin.getPassword()).length() > 8) {
            JOptionPane.showMessageDialog(this, "O campo PIN deve conter 8 caracteres.",
                    "Erro", JOptionPane.ERROR_MESSAGE);
        } else {
            certo = true;
        }
        return certo;
    }

    private void jSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jSalvarActionPerformed
        // TODO add your handling code here:
        Digitadores digi = new Digitadores();
        digi.setLogin("admin");
        DigitadoresBanco db = new DigitadoresBanco();

        boolean atualizado = false;
        String pin = new String(jAdminPin.getPassword());
        if (alterarSenha) {
            if (verificaCaixa("Senha", "Nova Senha")) {
                if (jAdminLogin.getText().length() >= 5 && jAdminLogin.getText().equals(jAdminSenha.getText())) {
                    digi.setId(userId);
                    digi.setSenha(jAdminSenha.getText());
                    digi.setPin(pin);

                    if (db.atualizarSenha(digi)) {
                        JOptionPane.showMessageDialog(null, "Senha atualizada com sucesso!");
                        this.dispose();
                    } else {
                        JOptionPane.showMessageDialog(this, "Dados incorretos. Tente novamente.",
                                "Erro", JOptionPane.ERROR_MESSAGE);
                    }
                } else {
                    JOptionPane.showMessageDialog(this, "Os campos Senha e Nova Senha devem ser iguais.",
                            "Aviso", JOptionPane.WARNING_MESSAGE);
                }
            }
        } else if (newDigit) {  //Novo digitador que utiliza o Cpf como Login/Senha 
            if (jAdminLogin.getText().toLowerCase().equals("admin") || jAdminSenha.getText().toLowerCase().equals("admin")) {
                JOptionPane.showMessageDialog(this, "Esta palavra não é aceita como Login ou Senha.",
                        "Erro", JOptionPane.ERROR_MESSAGE);
            } else if (verificaCaixa("Login", "Senha")) {
                digi.setNome("");
                digi.setLogin(jAdminLogin.getText());
                digi.setSenha(jAdminSenha.getText());

                if (db.validarLogin(digi.getLogin())) {    //verifica se há uma conta com este parâmetros
                    digi.setPin(pin);
                    digi.setId(userId);
                    db = new DigitadoresBanco();

                    atualizado = db.atualizarAdm(digi);
                    if (atualizado) {
                        JOptionPane.showMessageDialog(null, "Login e Senha Atualizados com Sucesso!\nPara mudar a Senha"
                                + " será necessário fornecer o PIN informado.\n\nGuarde o seu PIN!");
                        this.dispose();
                    } else {
                        JOptionPane.showMessageDialog(this, "Erro ao atualizar o seu Login e Senha.",
                                "Erro", JOptionPane.ERROR_MESSAGE);
                    }
                } else {
                    JOptionPane.showMessageDialog(this, "Está conta já existe. Tente novamente.",
                            "Erro", JOptionPane.ERROR_MESSAGE);
                }
            }
        } else { //Admin - Colocar primeira senha/login/pin
            if (verificaCaixa("Login", "Senha")) {
                if (jAdminLogin.getText().length() >= 5) {
                    digi.setLogin(jAdminLogin.getText());
                }
                digi.setSenha(jAdminSenha.getText());
                digi.setPin(pin);
                digi.setId(userId);

                atualizado = db.atualizarAdm(digi);

                if (atualizado) {
                    JOptionPane.showMessageDialog(null, "Administrador atualizado!\nPara mudar a Senha será necessário fornecer o PIN informado.\n\nGuarde o seu PIN!");
                    this.dispose();
                } else {
                    JOptionPane.showMessageDialog(this, "Erro ao atualizar o Administrador.",
                            "Erro", JOptionPane.ERROR_MESSAGE);
                }
            }
        }
    }//GEN-LAST:event_jSalvarActionPerformed
    
    /**
     * Coloca o valor de dígitos que uma caixa possui ao apertar uma tecla
     *
     * @param jCampo
     * @param jContador
     * @param contador
     * @param evt
     * @param pressReleas
     * @return
     */
    private int setJContador(javax.swing.JTextField jCampo, javax.swing.JLabel jContador, int contador, int evt,
            String pressReleas) {
        jContador.setVisible(true);
        //Faz a quantidade de caracteres aparecer na tela
        if (pressReleas.equals("Press")) {
            contador = TelaLogin.contadorTexto(jCampo.getText(), contador, evt, KeyEvent.VK_BACK_SPACE);
        } else {
            contador = jCampo.getText().length();
        }
        jContador.setText("(" + contador + ")");

        if (contador < 5 || contador > 15) {
            jContador.setForeground(Color.RED);
        } else {
            jContador.setForeground(Color.BLUE);
        }

        return contador;
    }

    private void jAdminLoginKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jAdminLoginKeyPressed
        // TODO add your handling code here:
        contadorLog = setJContador(jAdminLogin, jContadorLogin, contadorLog, evt.getKeyCode(), "Press");
    }//GEN-LAST:event_jAdminLoginKeyPressed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
        // formatando a tela principal para cada caso
        if (alterarSenha) {
            setTitle("Alterar Senha");
            jLabel1.setText("Senha*");
            jLabel2.setText("Nova Senha*");
            JOptionPane.showMessageDialog(this, "Insira a sua nova Senha e o seu PIN criado anteriormente");
        } else if (newDigit) {
            JOptionPane.showMessageDialog(this, "Para sua maior segurança modifique o Login e Senha e insira um PIN.");
        } else {
            JOptionPane.showMessageDialog(this, "Para sua maior segurança insira um PIN e Senha\nCaso não "
                    + "insira um Login este continuará sendo 'admin'");
        }
    }//GEN-LAST:event_formWindowOpened

    private void jAdminSenhaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jAdminSenhaKeyPressed
        // TODO add your handling code here:
        contadorSenha = setJContador(jAdminSenha, jContadorSenha, contadorSenha, evt.getKeyCode(), "Press");
    }//GEN-LAST:event_jAdminSenhaKeyPressed

    private void jAdminLoginComponentAdded(java.awt.event.ContainerEvent evt) {//GEN-FIRST:event_jAdminLoginComponentAdded
        // TODO add your handling code here:
    }//GEN-LAST:event_jAdminLoginComponentAdded

    private void jAdminLoginMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jAdminLoginMouseDragged
        // TODO add your handling code here:
    }//GEN-LAST:event_jAdminLoginMouseDragged

    private void jAdminLoginKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jAdminLoginKeyReleased
        // TODO add your handling code here
        contadorLog = setJContador(jAdminLogin, jContadorLogin, contadorLog, evt.getKeyCode(), "Released");
    }//GEN-LAST:event_jAdminLoginKeyReleased

    private void jAdminSenhaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jAdminSenhaKeyReleased
        // TODO add your handling code here:
        contadorSenha = setJContador(jAdminSenha, jContadorSenha, contadorSenha, evt.getKeyCode(), "Released");
    }//GEN-LAST:event_jAdminSenhaKeyReleased

    private void jAdminPinKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jAdminPinKeyPressed
        // TODO add your handling code here:
        contadorPin = setJContador(jAdminPin, jContadorPin, contadorLog, evt.getKeyCode(), "Press");
        
        if (contadorPin != 8) {
            jContadorPin.setForeground(Color.RED);
        } else {
            jContadorPin.setForeground(Color.BLUE);
        }
    }//GEN-LAST:event_jAdminPinKeyPressed

    private void jAdminPinKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jAdminPinKeyReleased
        // TODO add your handling code here:
        contadorPin = setJContador(jAdminPin, jContadorPin, contadorLog, evt.getKeyCode(), "Released");
        
        if (contadorPin != 8) {
            jContadorPin.setForeground(Color.RED);
        } else {
            jContadorPin.setForeground(Color.BLUE);
        }
    }//GEN-LAST:event_jAdminPinKeyReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaAtualizarAdmin.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaAtualizarAdmin.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaAtualizarAdmin.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaAtualizarAdmin.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TelaAtualizarAdmin().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField jAdminLogin;
    private javax.swing.JPasswordField jAdminPin;
    private javax.swing.JTextField jAdminSenha;
    private javax.swing.JLabel jContadorLogin;
    private javax.swing.JLabel jContadorPin;
    private javax.swing.JLabel jContadorSenha;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JButton jSalvar;
    // End of variables declaration//GEN-END:variables
}
